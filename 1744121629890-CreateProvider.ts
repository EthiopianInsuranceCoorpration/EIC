import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateProvider1744121629890 implements MigrationInterface {
    name = 'CreateProvider1744121629890'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "admins" DROP CONSTRAINT "FK_42aefb9c4154894047cb379a767"`);
        await queryRunner.query(`ALTER TABLE "admins" DROP CONSTRAINT "FK_2756b1e5face7d0df7827feef10"`);
        await queryRunner.query(`ALTER TABLE "policy_products" DROP CONSTRAINT "FK_b8315fd04c1eadb5ccf1b763df0"`);
        await queryRunner.query(`ALTER TABLE "members" DROP CONSTRAINT "FK_b80bda9009e0819e45be3f088e6"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_2a0b94713eb3203620b030272f0"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_133630808562de48067a5f7e4c4"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_b1b8e873ca9193939223c62d8c6"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_156ffd85ea735b1d3296629153d"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_f1cf02a8844037706511daefef4"`);
        await queryRunner.query(`CREATE TYPE "public"."staff_usertype_enum" AS ENUM('ADMIN', 'INSURANCE_ADMIN', 'INSURANCE_STAFF', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN', 'STAFF', 'MEMBER', 'PROVIDER')`);
        await queryRunner.query(`CREATE TYPE "public"."staff_roles_enum" AS ENUM('PROVIDER_MANAGEMENT', 'STAFF_MANAGEMENT', 'MEMBER_MANAGEMENT', 'CLAIMS_MANAGEMENT', 'BILLING_MANAGEMENT', 'REPORTS_MANAGEMENT', 'GENERAL_STAFF')`);
        await queryRunner.query(`CREATE TABLE "staff" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "username" character varying NOT NULL, "email" character varying, "password" character varying NOT NULL, "userType" "public"."staff_usertype_enum" NOT NULL, "firstName" character varying NOT NULL, "lastName" character varying NOT NULL, "phoneNumber" character varying NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "lastLoginAt" TIMESTAMP, "insuranceCompanyId" uuid, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "roles" "public"."staff_roles_enum" array NOT NULL DEFAULT '{GENERAL_STAFF}', "department" character varying, "position" character varying, "employeeId" character varying NOT NULL, "permissions" jsonb, "supervisorId" character varying, "workAssignments" jsonb, "performance" jsonb, CONSTRAINT "UQ_35aafb5ad218f3ff1ff70e281eb" UNIQUE ("username"), CONSTRAINT "UQ_902985a964245652d5e3a0f5f6a" UNIQUE ("email"), CONSTRAINT "PK_e4ee98bb552756c180aec1e854a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."providers_usertype_enum" AS ENUM('ADMIN', 'INSURANCE_ADMIN', 'INSURANCE_STAFF', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN', 'STAFF', 'MEMBER', 'PROVIDER')`);
        await queryRunner.query(`CREATE TYPE "public"."providers_category_enum" AS ENUM('HEALTH_FACILITY', 'OTHER')`);
        await queryRunner.query(`CREATE TYPE "public"."providers_facilitytype_enum" AS ENUM('PHARMACY', 'CLINIC', 'LABORATORY', 'PRIMARY_HOSPITAL', 'GENERAL_HOSPITAL', 'SPECIALIZED_HOSPITAL')`);
        await queryRunner.query(`CREATE TYPE "public"."providers_healthfacilitytype_enum" AS ENUM('PHARMACY', 'CLINIC', 'LABORATORY', 'PRIMARY_HOSPITAL', 'GENERAL_HOSPITAL', 'SPECIALIZED_HOSPITAL')`);
        await queryRunner.query(`CREATE TABLE "providers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "username" character varying NOT NULL, "email" character varying, "password" character varying NOT NULL, "userType" "public"."providers_usertype_enum" NOT NULL, "firstName" character varying NOT NULL, "lastName" character varying NOT NULL, "phoneNumber" character varying NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "lastLoginAt" TIMESTAMP, "insuranceCompanyId" uuid, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "facilityName" character varying NOT NULL, "category" "public"."providers_category_enum" NOT NULL DEFAULT 'HEALTH_FACILITY', "facilityType" "public"."providers_facilitytype_enum", "name" character varying NOT NULL, "phone" character varying NOT NULL, "address" character varying NOT NULL, "licenseNumber" character varying NOT NULL, "healthFacilityType" "public"."providers_healthfacilitytype_enum" NOT NULL, "specialties" text NOT NULL, "services" jsonb, "facilityServices" text NOT NULL, "active" boolean NOT NULL DEFAULT true, "licenseExpiryDate" date NOT NULL, "taxId" character varying, "location" jsonb NOT NULL, "operatingHours" jsonb, "accreditations" jsonb, "adminId" uuid, CONSTRAINT "UQ_adfd567f5946d614b08f7ceba64" UNIQUE ("username"), CONSTRAINT "UQ_32fe6bfe82d8e4959ba9d9fad42" UNIQUE ("email"), CONSTRAINT "REL_93afac8a313df439ab05cb51d8" UNIQUE ("adminId"), CONSTRAINT "PK_af13fc2ebf382fe0dad2e4793aa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."medical_items_type_enum" AS ENUM('DRUG', 'SUPPLY', 'EQUIPMENT', 'IMPLANT', 'OTHER')`);
        await queryRunner.query(`CREATE TABLE "medical_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(50) NOT NULL, "name" character varying(255) NOT NULL, "description" text, "type" "public"."medical_items_type_enum" NOT NULL DEFAULT 'OTHER', "categoryId" uuid NOT NULL, "unit" character varying(50) NOT NULL, "basePrice" numeric(10,2) NOT NULL, "requiresPriorAuth" boolean NOT NULL DEFAULT false, "isActive" boolean NOT NULL DEFAULT true, "insuranceCompanyId" uuid NOT NULL, "genericAlternatives" character varying array, "brandName" character varying(100), "manufacturer" character varying(100), "additionalProperties" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_0d839a0123094cd55c246cec837" UNIQUE ("code"), CONSTRAINT "PK_b982268a2a7128f9f2f49bdf946" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "medical_categories" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(50) NOT NULL, "name" character varying(100) NOT NULL, "description" text, "parentCategoryId" uuid, "isActive" boolean NOT NULL DEFAULT true, "insuranceCompanyId" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_40fb32e168931ecd3d6e6630ebc" UNIQUE ("code"), CONSTRAINT "PK_25c04464c779717fe3f242cb22f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."medical_services_type_enum" AS ENUM('CONSULTATION', 'PROCEDURE', 'DIAGNOSTIC', 'LABORATORY', 'IMAGING', 'THERAPY', 'PREVENTIVE', 'OTHER')`);
        await queryRunner.query(`CREATE TABLE "medical_services" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(50) NOT NULL, "codingSystem" character varying(50) NOT NULL, "name" character varying(255) NOT NULL, "description" text, "type" "public"."medical_services_type_enum" NOT NULL DEFAULT 'OTHER', "categoryId" uuid NOT NULL, "basePrice" numeric(10,2) NOT NULL, "standardDuration" integer, "requiresPriorAuth" boolean NOT NULL DEFAULT false, "isActive" boolean NOT NULL DEFAULT true, "insuranceCompanyId" uuid NOT NULL, "applicableDiagnosisCodes" character varying array, "placeOfServiceCodes" character varying array, "validModifiers" character varying array, "additionalProperties" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_1026d4c96c61a2b512a3220c234" UNIQUE ("code"), CONSTRAINT "PK_dc375d271f4c13a5a36bdd83c70" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."fraud_rules_type_enum" AS ENUM('FREQUENCY', 'COMPATIBILITY', 'UPCODING', 'PHANTOM_BILLING', 'DUPLICATE', 'UNBUNDLING', 'MEDICAL_NECESSITY', 'PROVIDER_SPECIALTY', 'MEMBER_ELIGIBILITY', 'GEOGRAPHIC', 'CUSTOM')`);
        await queryRunner.query(`CREATE TYPE "public"."fraud_rules_severity_enum" AS ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')`);
        await queryRunner.query(`CREATE TYPE "public"."fraud_rules_status_enum" AS ENUM('ACTIVE', 'INACTIVE', 'TESTING')`);
        await queryRunner.query(`CREATE TABLE "fraud_rules" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(50) NOT NULL, "name" character varying(100) NOT NULL, "description" text NOT NULL, "type" "public"."fraud_rules_type_enum" NOT NULL, "severity" "public"."fraud_rules_severity_enum" NOT NULL DEFAULT 'MEDIUM', "status" "public"."fraud_rules_status_enum" NOT NULL DEFAULT 'ACTIVE', "configuration" jsonb NOT NULL, "insuranceCompanyId" uuid, "isSystemWide" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_c7c7e726cd88d55a02b4c73b353" UNIQUE ("code"), CONSTRAINT "PK_5fabae585c6ce9ec162fc31d5d9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."claim_fraud_alerts_severity_enum" AS ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')`);
        await queryRunner.query(`CREATE TYPE "public"."claim_fraud_alerts_status_enum" AS ENUM('NEW', 'UNDER_REVIEW', 'CONFIRMED_FRAUD', 'FALSE_POSITIVE', 'RESOLVED')`);
        await queryRunner.query(`CREATE TYPE "public"."claim_fraud_alerts_resolution_enum" AS ENUM('NONE', 'CLAIM_DENIED', 'CLAIM_ADJUSTED', 'PROVIDER_WARNED', 'PROVIDER_SUSPENDED', 'MEMBER_WARNED', 'MEMBER_TERMINATED', 'REFERRED_TO_AUTHORITIES', 'OTHER')`);
        await queryRunner.query(`CREATE TABLE "claim_fraud_alerts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "claimId" uuid NOT NULL, "ruleId" uuid NOT NULL, "severity" "public"."claim_fraud_alerts_severity_enum" NOT NULL, "status" "public"."claim_fraud_alerts_status_enum" NOT NULL DEFAULT 'NEW', "resolution" "public"."claim_fraud_alerts_resolution_enum" NOT NULL DEFAULT 'NONE', "explanation" text NOT NULL, "confidenceScore" integer NOT NULL, "additionalData" jsonb, "reviewedByUserId" uuid, "reviewedAt" TIMESTAMP, "reviewNotes" text, "insuranceCompanyId" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_4b534b1b2606a266784e5759a24" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "corporate_client" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "registrationNumber" character varying NOT NULL, "address" character varying NOT NULL, "phone" character varying NOT NULL, "email" character varying, "website" character varying, "contactPerson" jsonb NOT NULL, "insuranceCompanyId" uuid NOT NULL, "contractDetails" jsonb NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_38c2e8961b8aa0357c6f71d75ad" UNIQUE ("name"), CONSTRAINT "UQ_a963f4642b6618da941b79582dd" UNIQUE ("registrationNumber"), CONSTRAINT "PK_df0e13418b45e1db2bc34480dd8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."coverage_plan_servicetype_enum" AS ENUM('GENERAL_MEDICAL', 'SPECIALIST', 'DENTAL', 'VISION', 'MATERNITY', 'EMERGENCY', 'PRESCRIPTION', 'LABORATORY', 'IMAGING', 'PHYSIOTHERAPY', 'MENTAL_HEALTH', 'CHRONIC_CARE')`);
        await queryRunner.query(`CREATE TYPE "public"."coverage_plan_coveragetype_enum" AS ENUM('FULL', 'PARTIAL', 'CAPPED', 'EXCLUDED')`);
        await queryRunner.query(`CREATE TABLE "coverage_plan" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "corporateClientId" uuid NOT NULL, "serviceType" "public"."coverage_plan_servicetype_enum" NOT NULL, "coverageType" "public"."coverage_plan_coveragetype_enum" NOT NULL, "coverageDetails" jsonb NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_f1553379b99a077b3690246f14e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."claim_items_status_enum" AS ENUM('PENDING', 'APPROVED', 'DENIED', 'ADJUSTED')`);
        await queryRunner.query(`CREATE TABLE "claim_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "claimId" uuid NOT NULL, "serviceCode" character varying(50) NOT NULL, "serviceDescription" character varying(255) NOT NULL, "serviceDate" date NOT NULL, "quantity" integer NOT NULL DEFAULT '1', "unitPrice" numeric(10,2) NOT NULL, "totalPrice" numeric(10,2) NOT NULL, "approvedAmount" numeric(10,2) NOT NULL DEFAULT '0', "paidAmount" numeric(10,2) NOT NULL DEFAULT '0', "memberResponsibility" numeric(10,2) NOT NULL DEFAULT '0', "status" "public"."claim_items_status_enum" NOT NULL DEFAULT 'PENDING', "denialReason" character varying(500), "modifiers" character varying(100), "isExcludedService" boolean NOT NULL DEFAULT false, "isPreventiveCare" boolean NOT NULL DEFAULT false, "additionalData" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_7cf44c1e8a230f5dc37d3f6c9a2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."claim_adjustments_adjustmenttype_enum" AS ENUM('DEDUCTIBLE', 'COPAY', 'COINSURANCE', 'NON_COVERED', 'OUT_OF_NETWORK', 'DUPLICATE', 'BUNDLING', 'COORDINATION_OF_BENEFITS', 'MAXIMUM_ALLOWABLE', 'POLICY_LIMITATION', 'OTHER')`);
        await queryRunner.query(`CREATE TABLE "claim_adjustments" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "claimId" uuid NOT NULL, "claimItemId" uuid, "adjustmentType" "public"."claim_adjustments_adjustmenttype_enum" NOT NULL, "amount" numeric(10,2) NOT NULL, "reason" character varying(255) NOT NULL, "appliedById" uuid, "referenceNumber" character varying(100), "adjustmentDate" date NOT NULL, "additionalData" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_638de9ded35c61cb164580d7570" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."claims_status_enum" AS ENUM('SUBMITTED', 'PENDING', 'IN_REVIEW', 'APPROVED', 'PARTIALLY_APPROVED', 'DENIED', 'APPEALED', 'PAID', 'VOID')`);
        await queryRunner.query(`CREATE TYPE "public"."claims_claimtype_enum" AS ENUM('MEDICAL', 'DENTAL', 'VISION', 'PHARMACY', 'MENTAL_HEALTH')`);
        await queryRunner.query(`CREATE TYPE "public"."claims_submissiontype_enum" AS ENUM('ELECTRONIC', 'PAPER', 'PORTAL', 'MOBILE')`);
        await queryRunner.query(`CREATE TABLE "claims" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "insuranceCompanyId" uuid NOT NULL, "memberId" uuid NOT NULL, "providerId" uuid, "claimNumber" character varying(50) NOT NULL, "status" "public"."claims_status_enum" NOT NULL DEFAULT 'SUBMITTED', "claimType" "public"."claims_claimtype_enum" NOT NULL DEFAULT 'MEDICAL', "submissionType" "public"."claims_submissiontype_enum" NOT NULL DEFAULT 'ELECTRONIC', "serviceStartDate" date NOT NULL, "serviceEndDate" date, "submissionDate" date NOT NULL, "totalAmount" numeric(10,2) NOT NULL DEFAULT '0', "approvedAmount" numeric(10,2) NOT NULL DEFAULT '0', "paidAmount" numeric(10,2) NOT NULL DEFAULT '0', "memberResponsibility" numeric(10,2) NOT NULL DEFAULT '0', "denialReason" character varying(500), "diagnosisCode" character varying(100), "additionalDiagnosisCodes" text, "isEmergency" boolean NOT NULL DEFAULT false, "preAuthorizationRequired" boolean NOT NULL DEFAULT false, "preAuthorizationNumber" character varying(50), "isOutOfNetwork" boolean NOT NULL DEFAULT false, "notes" character varying(500), "additionalData" jsonb, "isDeleted" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_ae47a48242e9feaa7e202e344c9" UNIQUE ("claimNumber"), CONSTRAINT "PK_96c91970c0dcb2f69fdccd0a698" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."claim_appeals_status_enum" AS ENUM('SUBMITTED', 'UNDER_REVIEW', 'ADDITIONAL_INFO_REQUIRED', 'APPROVED', 'PARTIALLY_APPROVED', 'DENIED', 'ESCALATED', 'CLOSED')`);
        await queryRunner.query(`CREATE TABLE "claim_appeals" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "claimId" uuid NOT NULL, "submittedById" uuid NOT NULL, "appealNumber" character varying(50) NOT NULL, "status" "public"."claim_appeals_status_enum" NOT NULL DEFAULT 'SUBMITTED', "submissionDate" date NOT NULL, "reason" character varying(1000) NOT NULL, "supportingInformation" character varying(1000), "documentReferences" text, "reviewedById" uuid, "reviewDate" date, "decisionNotes" character varying(1000), "originalAmount" numeric(10,2), "appealedAmount" numeric(10,2), "approvedAmount" numeric(10,2), "isEscalated" boolean NOT NULL DEFAULT false, "appealLevel" integer NOT NULL DEFAULT '1', "additionalData" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_acb8b05febf43f55b57417c4280" UNIQUE ("appealNumber"), CONSTRAINT "PK_708283f9196466189fc53b32aaf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "invoice_item" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "invoiceId" uuid NOT NULL, "description" character varying NOT NULL, "unitPrice" numeric(10,2) NOT NULL, "quantity" integer NOT NULL DEFAULT '1', "discount" numeric(10,2) NOT NULL DEFAULT '0', "tax" numeric(10,2) NOT NULL DEFAULT '0', "total" numeric(10,2) NOT NULL, "serviceDate" TIMESTAMP, "serviceCode" character varying, "periodStart" TIMESTAMP, "periodEnd" TIMESTAMP, "itemType" character varying, "notes" character varying, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_621317346abdf61295516f3cb76" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."payment_plan_status_enum" AS ENUM('active', 'completed', 'defaulted', 'cancelled')`);
        await queryRunner.query(`CREATE TYPE "public"."payment_plan_frequency_enum" AS ENUM('weekly', 'biweekly', 'monthly', 'quarterly', 'annually')`);
        await queryRunner.query(`CREATE TABLE "payment_plan" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "planNumber" character varying NOT NULL, "invoiceId" uuid NOT NULL, "status" "public"."payment_plan_status_enum" NOT NULL DEFAULT 'active', "frequency" "public"."payment_plan_frequency_enum" NOT NULL DEFAULT 'monthly', "totalAmount" numeric(10,2) NOT NULL, "amountPaid" numeric(10,2) NOT NULL DEFAULT '0', "installmentAmount" numeric(10,2) NOT NULL, "totalInstallments" integer NOT NULL, "installmentsPaid" integer NOT NULL DEFAULT '0', "startDate" date NOT NULL, "endDate" date NOT NULL, "nextDueDate" date, "gracePeriodDays" integer NOT NULL DEFAULT '0', "autoDebit" boolean NOT NULL DEFAULT false, "paymentMethod" character varying, "paymentDetails" character varying, "insuranceCompanyId" uuid NOT NULL, "memberId" uuid, "corporateClientId" uuid, "notes" character varying, "reminderEnabled" boolean NOT NULL DEFAULT false, "reminderDaysBefore" integer NOT NULL DEFAULT '3', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_f75c873b2c5461ccbe742c0f237" UNIQUE ("planNumber"), CONSTRAINT "PK_db12dcbce4ef547fa9879a0aca0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "policy_contracts_contractNumber_key"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "contractNumber"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyProductId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "primaryMemberId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "dependentMemberIds"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "paymentStatus"`);
        await queryRunner.query(`DROP TYPE "public"."payment_status_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "effectiveDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "nextPremiumDueDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "premiumAmount"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "totalCoverageAmount"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "waitingPeriodEndDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "gracePeriodEndDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "cancellationReason"`);
        await queryRunner.query(`DROP TYPE "public"."cancellation_reason_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "cancellationDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "previousContractId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "specialTerms"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "paymentHistory"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "documents"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyNumber" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "UQ_ddcf5de77e0746d5cc96023e7ab" UNIQUE ("policyNumber")`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "contractNumber" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "UQ_0ce8a9bea75ee649451d9ee4c5d" UNIQUE ("contractNumber")`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyProductId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "primaryMemberId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "dependentMemberIds" uuid array NOT NULL DEFAULT '{}'`);
        await queryRunner.query(`CREATE TYPE "public"."policy_contracts_paymentstatus_enum" AS ENUM('PENDING', 'PARTIAL', 'PAID', 'OVERDUE', 'DEFAULTED', 'REFUNDED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "paymentStatus" "public"."policy_contracts_paymentstatus_enum" NOT NULL DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "effectiveDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "nextPremiumDueDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "premiumAmount" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "totalCoverageAmount" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "waitingPeriodEndDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "gracePeriodEndDate" TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."policy_contracts_cancellationreason_enum" AS ENUM('NON_PAYMENT', 'MEMBER_REQUEST', 'FRAUD', 'DEATH', 'RELOCATION', 'EMPLOYER_TERMINATION', 'OTHER')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "cancellationReason" "public"."policy_contracts_cancellationreason_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "cancellationDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "previousContractId" uuid`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "specialTerms" jsonb`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "paymentHistory" jsonb NOT NULL DEFAULT '[]'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "documents" jsonb NOT NULL DEFAULT '[]'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "memberId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyType" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "startDate" date NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "premium" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "deductible" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "coinsurance" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "outOfPocketMax" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "coverageDetails" jsonb`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "benefitLimits" jsonb`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "isAutoRenew" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "notes" character varying(255)`);
        await queryRunner.query(`ALTER TYPE "public"."user_type_enum" RENAME TO "user_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."admins_usertype_enum" AS ENUM('ADMIN', 'INSURANCE_ADMIN', 'INSURANCE_STAFF', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN', 'STAFF', 'MEMBER', 'PROVIDER')`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "userType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "userType" TYPE "public"."admins_usertype_enum" USING "userType"::"text"::"public"."admins_usertype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."user_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "phoneNumber" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."admin_type_enum" RENAME TO "admin_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."admins_admintype_enum" AS ENUM('SYSTEM_ADMIN', 'INSURANCE_ADMIN', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN')`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" TYPE "public"."admins_admintype_enum" USING "adminType"::"text"::"public"."admins_admintype_enum"`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" SET DEFAULT 'SYSTEM_ADMIN'`);
        await queryRunner.query(`DROP TYPE "public"."admin_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "insurance_companies" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "insurance_companies" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."policy_type_enum" RENAME TO "policy_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_products_type_enum" AS ENUM('INDIVIDUAL', 'FAMILY', 'GROUP', 'CORPORATE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "type" TYPE "public"."policy_products_type_enum" USING "type"::"text"::"public"."policy_products_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."policy_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."product_status_enum" RENAME TO "product_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_products_status_enum" AS ENUM('DRAFT', 'ACTIVE', 'INACTIVE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" TYPE "public"."policy_products_status_enum" USING "status"::"text"::"public"."policy_products_status_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."product_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."coverage_type_enum" RENAME TO "coverage_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_products_coveragetypes_enum" AS ENUM('BASIC', 'STANDARD', 'PREMIUM', 'EXECUTIVE', 'INPATIENT', 'OUTPATIENT', 'DENTAL', 'OPTICAL', 'MATERNITY', 'EMERGENCY', 'CHRONIC', 'PREVENTIVE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageTypes" TYPE "public"."policy_products_coveragetypes_enum"[] USING "coverageTypes"::"text"::"public"."policy_products_coveragetypes_enum"[]`);
        await queryRunner.query(`DROP TYPE "public"."coverage_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "basePremium" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "basePremium" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageType" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageType" SET DEFAULT 'BASIC'`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "premiumModifiers" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "premiumModifiers" SET DEFAULT '{"ageFactors":[{"minAge":0,"maxAge":17,"factor":0.5},{"minAge":18,"maxAge":29,"factor":0.8},{"minAge":30,"maxAge":39,"factor":1},{"minAge":40,"maxAge":49,"factor":1.2},{"minAge":50,"maxAge":59,"factor":1.5},{"minAge":60,"maxAge":69,"factor":2},{"minAge":70,"maxAge":999,"factor":2.5}],"familySizeFactors":[{"size":1,"factor":1},{"size":2,"factor":1.8},{"size":3,"factor":2.4},{"size":4,"factor":2.8},{"size":5,"factor":3},{"size":6,"factor":3.2}],"loadingFactors":[],"discountFactors":[]}'`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "userType"`);
        await queryRunner.query(`CREATE TYPE "public"."members_usertype_enum" AS ENUM('ADMIN', 'INSURANCE_ADMIN', 'INSURANCE_STAFF', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN', 'STAFF', 'MEMBER', 'PROVIDER')`);
        await queryRunner.query(`ALTER TABLE "members" ADD "userType" "public"."members_usertype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "firstName"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "firstName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "lastName"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "lastName" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "dateOfBirth" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "employerId"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "employerId" character varying`);
        await queryRunner.query(`ALTER TYPE "public"."contract_status_enum" RENAME TO "contract_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_contracts_status_enum" AS ENUM('DRAFT', 'PENDING', 'ACTIVE', 'GRACE_PERIOD', 'SUSPENDED', 'CANCELLED', 'EXPIRED', 'RENEWED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" TYPE "public"."policy_contracts_status_enum" USING "status"::"text"::"public"."policy_contracts_status_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."contract_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "UQ_ddcf5de77e0746d5cc96023e7ab"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyNumber"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyNumber" character varying(50) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "endDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "endDate" date NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."contract_status_enum" RENAME TO "contract_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_contracts_status_enum" AS ENUM('PENDING', 'ACTIVE', 'EXPIRED', 'CANCELED', 'RENEWED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" TYPE "public"."policy_contracts_status_enum" USING "status"::"text"::"public"."policy_contracts_status_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."contract_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "notes" character varying`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "paymentTerms"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "paymentTerms" character varying`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "billingAddress"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "billingAddress" character varying`);
        await queryRunner.query(`ALTER TYPE "public"."payment_status_enum" RENAME TO "payment_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."payment_status_enum" AS ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED')`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" TYPE "public"."payment_status_enum" USING "status"::"text"::"public"."payment_status_enum"`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."payment_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "gatewayResponse"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "gatewayResponse" character varying`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "notes" character varying`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "cardLastFour"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "cardLastFour" character varying`);
        await queryRunner.query(`ALTER TABLE "staff" ADD CONSTRAINT "FK_78140768452e7d9ad540a10e092" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "admins" ADD CONSTRAINT "FK_42aefb9c4154894047cb379a767" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "admins" ADD CONSTRAINT "FK_2756b1e5face7d0df7827feef10" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_client"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "providers" ADD CONSTRAINT "FK_e5dae8777ac6245c43f8e179a9d" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "providers" ADD CONSTRAINT "FK_93afac8a313df439ab05cb51d8b" FOREIGN KEY ("adminId") REFERENCES "admins"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_products" ADD CONSTRAINT "FK_b8315fd04c1eadb5ccf1b763df0" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "members" ADD CONSTRAINT "FK_1b67303b39472b8fa2926488064" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "members" ADD CONSTRAINT "FK_b80bda9009e0819e45be3f088e6" FOREIGN KEY ("policyContractId") REFERENCES "policy_contracts"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_2a0b94713eb3203620b030272f0" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_133630808562de48067a5f7e4c4" FOREIGN KEY ("policyProductId") REFERENCES "policy_products"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e" FOREIGN KEY ("primaryMemberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e" FOREIGN KEY ("primaryMemberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_b1b8e873ca9193939223c62d8c6" FOREIGN KEY ("previousContractId") REFERENCES "policy_contracts"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "medical_items" ADD CONSTRAINT "FK_7b8ad00718dd1e6830fe32342c9" FOREIGN KEY ("categoryId") REFERENCES "medical_categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "medical_services" ADD CONSTRAINT "FK_9435d0a983f6623697c031f72cc" FOREIGN KEY ("categoryId") REFERENCES "medical_categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_b3a7e42f870d09d0309a8436991" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claim_fraud_alerts" ADD CONSTRAINT "FK_606c7ec74d054856eea6aa98df5" FOREIGN KEY ("ruleId") REFERENCES "fraud_rules"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "corporate_client" ADD CONSTRAINT "FK_979458580daba811a5724fd760f" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "coverage_plan" ADD CONSTRAINT "FK_2c5b632928c395ea7e86f32e189" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_client"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claim_items" ADD CONSTRAINT "FK_b479f850c47ca8be114d2b588bb" FOREIGN KEY ("claimId") REFERENCES "claims"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claim_adjustments" ADD CONSTRAINT "FK_5432b119d8e9a5860a4415ed61a" FOREIGN KEY ("claimId") REFERENCES "claims"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claims" ADD CONSTRAINT "FK_8ec93b65730b2fbcf191d0be4e9" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claims" ADD CONSTRAINT "FK_248069e5d7327a16b74f35449ad" FOREIGN KEY ("providerId") REFERENCES "providers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "claim_appeals" ADD CONSTRAINT "FK_5a5adc19e6c017bbffd8e20ae3b" FOREIGN KEY ("claimId") REFERENCES "claims"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice_item" ADD CONSTRAINT "FK_553d5aac210d22fdca5c8d48ead" FOREIGN KEY ("invoiceId") REFERENCES "invoice"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_156ffd85ea735b1d3296629153d" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_905722f338fd55e74a3a01eb712" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_3204ef9bf962cf5ec7bb5f5cceb" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_client"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_a5ab380132696758e2c09c4ca97" FOREIGN KEY ("policyContractId") REFERENCES "policy_contracts"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_87223c7f1d4c2ca51cf69927844" FOREIGN KEY ("invoiceId") REFERENCES "invoice"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_f1cf02a8844037706511daefef4" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_89ce346f102c90b97ee97a94d75" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_2bee86146d772df50d748416a2d" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_client"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment_plan" ADD CONSTRAINT "FK_f1598f395497b919234fac2f5f4" FOREIGN KEY ("invoiceId") REFERENCES "invoice"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment_plan" ADD CONSTRAINT "FK_6bad58c1b948ebb1317537b7e2b" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment_plan" ADD CONSTRAINT "FK_e204d8e95da5de517f9c4f6e0f4" FOREIGN KEY ("memberId") REFERENCES "members"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment_plan" ADD CONSTRAINT "FK_c5919640f792972dd9ad2874150" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_client"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "payment_plan" DROP CONSTRAINT "FK_c5919640f792972dd9ad2874150"`);
        await queryRunner.query(`ALTER TABLE "payment_plan" DROP CONSTRAINT "FK_e204d8e95da5de517f9c4f6e0f4"`);
        await queryRunner.query(`ALTER TABLE "payment_plan" DROP CONSTRAINT "FK_6bad58c1b948ebb1317537b7e2b"`);
        await queryRunner.query(`ALTER TABLE "payment_plan" DROP CONSTRAINT "FK_f1598f395497b919234fac2f5f4"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_2bee86146d772df50d748416a2d"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_89ce346f102c90b97ee97a94d75"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_f1cf02a8844037706511daefef4"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_87223c7f1d4c2ca51cf69927844"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_a5ab380132696758e2c09c4ca97"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_3204ef9bf962cf5ec7bb5f5cceb"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_905722f338fd55e74a3a01eb712"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_156ffd85ea735b1d3296629153d"`);
        await queryRunner.query(`ALTER TABLE "invoice_item" DROP CONSTRAINT "FK_553d5aac210d22fdca5c8d48ead"`);
        await queryRunner.query(`ALTER TABLE "claim_appeals" DROP CONSTRAINT "FK_5a5adc19e6c017bbffd8e20ae3b"`);
        await queryRunner.query(`ALTER TABLE "claims" DROP CONSTRAINT "FK_248069e5d7327a16b74f35449ad"`);
        await queryRunner.query(`ALTER TABLE "claims" DROP CONSTRAINT "FK_8ec93b65730b2fbcf191d0be4e9"`);
        await queryRunner.query(`ALTER TABLE "claim_adjustments" DROP CONSTRAINT "FK_5432b119d8e9a5860a4415ed61a"`);
        await queryRunner.query(`ALTER TABLE "claim_items" DROP CONSTRAINT "FK_b479f850c47ca8be114d2b588bb"`);
        await queryRunner.query(`ALTER TABLE "coverage_plan" DROP CONSTRAINT "FK_2c5b632928c395ea7e86f32e189"`);
        await queryRunner.query(`ALTER TABLE "corporate_client" DROP CONSTRAINT "FK_979458580daba811a5724fd760f"`);
        await queryRunner.query(`ALTER TABLE "claim_fraud_alerts" DROP CONSTRAINT "FK_606c7ec74d054856eea6aa98df5"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_b3a7e42f870d09d0309a8436991"`);
        await queryRunner.query(`ALTER TABLE "medical_services" DROP CONSTRAINT "FK_9435d0a983f6623697c031f72cc"`);
        await queryRunner.query(`ALTER TABLE "medical_items" DROP CONSTRAINT "FK_7b8ad00718dd1e6830fe32342c9"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_b1b8e873ca9193939223c62d8c6"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_133630808562de48067a5f7e4c4"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "FK_2a0b94713eb3203620b030272f0"`);
        await queryRunner.query(`ALTER TABLE "members" DROP CONSTRAINT "FK_b80bda9009e0819e45be3f088e6"`);
        await queryRunner.query(`ALTER TABLE "members" DROP CONSTRAINT "FK_1b67303b39472b8fa2926488064"`);
        await queryRunner.query(`ALTER TABLE "policy_products" DROP CONSTRAINT "FK_b8315fd04c1eadb5ccf1b763df0"`);
        await queryRunner.query(`ALTER TABLE "providers" DROP CONSTRAINT "FK_93afac8a313df439ab05cb51d8b"`);
        await queryRunner.query(`ALTER TABLE "providers" DROP CONSTRAINT "FK_e5dae8777ac6245c43f8e179a9d"`);
        await queryRunner.query(`ALTER TABLE "admins" DROP CONSTRAINT "FK_2756b1e5face7d0df7827feef10"`);
        await queryRunner.query(`ALTER TABLE "admins" DROP CONSTRAINT "FK_42aefb9c4154894047cb379a767"`);
        await queryRunner.query(`ALTER TABLE "staff" DROP CONSTRAINT "FK_78140768452e7d9ad540a10e092"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "cardLastFour"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "cardLastFour" character varying(4)`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "notes" text`);
        await queryRunner.query(`ALTER TABLE "payment" DROP COLUMN "gatewayResponse"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD "gatewayResponse" text`);
        await queryRunner.query(`CREATE TYPE "public"."payment_status_enum_old" AS ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED')`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" TYPE "public"."payment_status_enum_old" USING "status"::"text"::"public"."payment_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "payment" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."payment_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."payment_status_enum_old" RENAME TO "payment_status_enum"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "billingAddress"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "billingAddress" text`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "paymentTerms"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "paymentTerms" text`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD "notes" text`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."contract_status_enum_old" AS ENUM('DRAFT', 'PENDING', 'ACTIVE', 'GRACE_PERIOD', 'SUSPENDED', 'CANCELLED', 'EXPIRED', 'RENEWED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" TYPE "public"."contract_status_enum_old" USING "status"::"text"::"public"."contract_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."policy_contracts_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."contract_status_enum_old" RENAME TO "contract_status_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "endDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "endDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyNumber"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyNumber" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "UQ_ddcf5de77e0746d5cc96023e7ab" UNIQUE ("policyNumber")`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."contract_status_enum_old" AS ENUM('DRAFT', 'PENDING', 'ACTIVE', 'GRACE_PERIOD', 'SUSPENDED', 'CANCELLED', 'EXPIRED', 'RENEWED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" TYPE "public"."contract_status_enum_old" USING "status"::"text"::"public"."contract_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."policy_contracts_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."contract_status_enum_old" RENAME TO "contract_status_enum"`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "employerId"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "employerId" uuid`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "dateOfBirth" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "members" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "lastName"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "lastName" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "firstName"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "firstName" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "members" DROP COLUMN "userType"`);
        await queryRunner.query(`DROP TYPE "public"."members_usertype_enum"`);
        await queryRunner.query(`ALTER TABLE "members" ADD "userType" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "premiumModifiers" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "premiumModifiers" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageType" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "basePremium" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "basePremium" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."coverage_type_enum_old" AS ENUM('BASIC', 'STANDARD', 'PREMIUM', 'EXECUTIVE', 'INPATIENT', 'OUTPATIENT', 'DENTAL', 'OPTICAL', 'MATERNITY', 'EMERGENCY', 'CHRONIC', 'PREVENTIVE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "coverageTypes" TYPE "public"."coverage_type_enum_old"[] USING "coverageTypes"::"text"::"public"."coverage_type_enum_old"[]`);
        await queryRunner.query(`DROP TYPE "public"."policy_products_coveragetypes_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."coverage_type_enum_old" RENAME TO "coverage_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."product_status_enum_old" AS ENUM('DRAFT', 'ACTIVE', 'INACTIVE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" TYPE "public"."product_status_enum_old" USING "status"::"text"::"public"."product_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."policy_products_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."product_status_enum_old" RENAME TO "product_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."policy_type_enum_old" AS ENUM('INDIVIDUAL', 'FAMILY', 'GROUP', 'CORPORATE')`);
        await queryRunner.query(`ALTER TABLE "policy_products" ALTER COLUMN "type" TYPE "public"."policy_type_enum_old" USING "type"::"text"::"public"."policy_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."policy_products_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."policy_type_enum_old" RENAME TO "policy_type_enum"`);
        await queryRunner.query(`ALTER TABLE "insurance_companies" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "insurance_companies" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."admin_type_enum_old" AS ENUM('SYSTEM_ADMIN', 'INSURANCE_ADMIN', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN')`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" TYPE "public"."admin_type_enum_old" USING "adminType"::"text"::"public"."admin_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "adminType" SET DEFAULT 'SYSTEM_ADMIN'`);
        await queryRunner.query(`DROP TYPE "public"."admins_admintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."admin_type_enum_old" RENAME TO "admin_type_enum"`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "phoneNumber" DROP NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."user_type_enum_old" AS ENUM('ADMIN', 'INSURANCE_ADMIN', 'INSURANCE_STAFF', 'CORPORATE_ADMIN', 'PROVIDER_ADMIN', 'STAFF', 'MEMBER', 'PROVIDER')`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "userType" TYPE "public"."user_type_enum_old" USING "userType"::"text"::"public"."user_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "admins" ALTER COLUMN "userType" SET DEFAULT 'ADMIN'`);
        await queryRunner.query(`DROP TYPE "public"."admins_usertype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_type_enum_old" RENAME TO "user_type_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "isAutoRenew"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "benefitLimits"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "coverageDetails"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "outOfPocketMax"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "coinsurance"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "deductible"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "premium"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "startDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyType"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "memberId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "documents"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "paymentHistory"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "specialTerms"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "previousContractId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "cancellationDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "cancellationReason"`);
        await queryRunner.query(`DROP TYPE "public"."policy_contracts_cancellationreason_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "gracePeriodEndDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "waitingPeriodEndDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "totalCoverageAmount"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "premiumAmount"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "nextPremiumDueDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "effectiveDate"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "paymentStatus"`);
        await queryRunner.query(`DROP TYPE "public"."policy_contracts_paymentstatus_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "dependentMemberIds"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "primaryMemberId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyProductId"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "UQ_0ce8a9bea75ee649451d9ee4c5d"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "contractNumber"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP CONSTRAINT "UQ_ddcf5de77e0746d5cc96023e7ab"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" DROP COLUMN "policyNumber"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "documents" jsonb NOT NULL DEFAULT '[]'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "paymentHistory" jsonb NOT NULL DEFAULT '[]'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "specialTerms" jsonb`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "previousContractId" uuid`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "cancellationDate" TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."cancellation_reason_enum" AS ENUM('NON_PAYMENT', 'MEMBER_REQUEST', 'FRAUD', 'DEATH', 'RELOCATION', 'EMPLOYER_TERMINATION', 'OTHER')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "cancellationReason" "public"."cancellation_reason_enum"`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "gracePeriodEndDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "waitingPeriodEndDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "totalCoverageAmount" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "premiumAmount" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "nextPremiumDueDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "effectiveDate" TIMESTAMP NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."payment_status_enum" AS ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED')`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "paymentStatus" "public"."payment_status_enum" NOT NULL DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "dependentMemberIds" uuid array NOT NULL DEFAULT '{}'`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "primaryMemberId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "policyProductId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD "contractNumber" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "policy_contracts_contractNumber_key" UNIQUE ("contractNumber")`);
        await queryRunner.query(`DROP TABLE "payment_plan"`);
        await queryRunner.query(`DROP TYPE "public"."payment_plan_frequency_enum"`);
        await queryRunner.query(`DROP TYPE "public"."payment_plan_status_enum"`);
        await queryRunner.query(`DROP TABLE "invoice_item"`);
        await queryRunner.query(`DROP TABLE "claim_appeals"`);
        await queryRunner.query(`DROP TYPE "public"."claim_appeals_status_enum"`);
        await queryRunner.query(`DROP TABLE "claims"`);
        await queryRunner.query(`DROP TYPE "public"."claims_submissiontype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."claims_claimtype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."claims_status_enum"`);
        await queryRunner.query(`DROP TABLE "claim_adjustments"`);
        await queryRunner.query(`DROP TYPE "public"."claim_adjustments_adjustmenttype_enum"`);
        await queryRunner.query(`DROP TABLE "claim_items"`);
        await queryRunner.query(`DROP TYPE "public"."claim_items_status_enum"`);
        await queryRunner.query(`DROP TABLE "coverage_plan"`);
        await queryRunner.query(`DROP TYPE "public"."coverage_plan_coveragetype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."coverage_plan_servicetype_enum"`);
        await queryRunner.query(`DROP TABLE "corporate_client"`);
        await queryRunner.query(`DROP TABLE "claim_fraud_alerts"`);
        await queryRunner.query(`DROP TYPE "public"."claim_fraud_alerts_resolution_enum"`);
        await queryRunner.query(`DROP TYPE "public"."claim_fraud_alerts_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."claim_fraud_alerts_severity_enum"`);
        await queryRunner.query(`DROP TABLE "fraud_rules"`);
        await queryRunner.query(`DROP TYPE "public"."fraud_rules_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."fraud_rules_severity_enum"`);
        await queryRunner.query(`DROP TYPE "public"."fraud_rules_type_enum"`);
        await queryRunner.query(`DROP TABLE "medical_services"`);
        await queryRunner.query(`DROP TYPE "public"."medical_services_type_enum"`);
        await queryRunner.query(`DROP TABLE "medical_categories"`);
        await queryRunner.query(`DROP TABLE "medical_items"`);
        await queryRunner.query(`DROP TYPE "public"."medical_items_type_enum"`);
        await queryRunner.query(`DROP TABLE "providers"`);
        await queryRunner.query(`DROP TYPE "public"."providers_healthfacilitytype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."providers_facilitytype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."providers_category_enum"`);
        await queryRunner.query(`DROP TYPE "public"."providers_usertype_enum"`);
        await queryRunner.query(`DROP TABLE "staff"`);
        await queryRunner.query(`DROP TYPE "public"."staff_roles_enum"`);
        await queryRunner.query(`DROP TYPE "public"."staff_usertype_enum"`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_f1cf02a8844037706511daefef4" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_156ffd85ea735b1d3296629153d" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_b1b8e873ca9193939223c62d8c6" FOREIGN KEY ("previousContractId") REFERENCES "policy_contracts"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_8e656fa44abb845250ec31cbf4e" FOREIGN KEY ("primaryMemberId") REFERENCES "members"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_133630808562de48067a5f7e4c4" FOREIGN KEY ("policyProductId") REFERENCES "policy_products"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_contracts" ADD CONSTRAINT "FK_2a0b94713eb3203620b030272f0" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "members" ADD CONSTRAINT "FK_b80bda9009e0819e45be3f088e6" FOREIGN KEY ("policyContractId") REFERENCES "policy_contracts"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "policy_products" ADD CONSTRAINT "FK_b8315fd04c1eadb5ccf1b763df0" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "admins" ADD CONSTRAINT "FK_2756b1e5face7d0df7827feef10" FOREIGN KEY ("corporateClientId") REFERENCES "corporate_clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "admins" ADD CONSTRAINT "FK_42aefb9c4154894047cb379a767" FOREIGN KEY ("insuranceCompanyId") REFERENCES "insurance_companies"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
    }

}
